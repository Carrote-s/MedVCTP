import json

# Load JSON files
with open("close_bbox.json") as f:
    close_bbox = json.load(f)

with open("raw_images.json") as f:
    raw_images = json.load(f)

with open("gCaptions_1.json") as f:x
    gCaptions = json.load(f)

with open("rCaptions_1.json") as f:
    rCaptions = json.load(f)

# Create dictionaries for faster lookup
image_id_to_path = {item['image_id']: item['image_path'] for item in raw_images}
image_id_to_gcaption = {item['image_id']: item['caption'] for item in gCaptions}

# Organize regional captions by image_id
from collections import defaultdict
image_id_to_rcaptions = defaultdict(list)
for item in rCaptions:
    image_id_to_rcaptions[item['image_id']].append(item)

# Loop through close_bbox
correct = 0
total = 0
for entry in close_bbox:
    image_id = entry['image_id']
    question = entry['question']
    answer = entry.get('answer', None)  # optional

    # Get image path
    image_path = image_id_to_path.get(image_id, None)
    
    # Get global caption
    gCaption = image_id_to_gcaption.get(image_id, "")
    
    # Get all regional captions
    rCaptions_list = image_id_to_rcaptions.get(image_id, [])
    
    # Combine regional captions into one string
    rCaption_str = ""
    for rc in rCaptions_list:
        rCaption_str += f"Label: {rc['label']}, Caption: {rc['caption'].strip()}. "

    # Strip final whitespace
    rCaption_str = rCaption_str.strip()

    # Now you have all components for the VCTP function
    rationaleOut, answerOut = med_vctp(image_path, question, examples5, gCaption, rCaption_str)
    if normalize(answerOut) == answer.lower():
        correct+=1
    else:
        pass
    total+=1
    if total%100 == 0:
        print(f"100 done so far, {correct} correct and {total} total questions passed")
print(f"Total correct = {correct}")
print(f"Total = {total}")
